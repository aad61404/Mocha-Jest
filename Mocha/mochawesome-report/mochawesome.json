{
  "stats": {
    "suites": 2,
    "tests": 12,
    "passes": 11,
    "pending": 0,
    "failures": 1,
    "start": "2020-03-30T16:20:04.730Z",
    "end": "2020-03-30T16:20:04.764Z",
    "duration": 34,
    "testsRegistered": 12,
    "passPercent": 91.66666666666666,
    "pendingPercent": 0,
    "other": 0,
    "hasOther": false,
    "skipped": 0,
    "hasSkipped": false
  },
  "results": [
    {
      "uuid": "221a8f96-0f5f-4cb4-a4ea-7d7896d0a08d",
      "title": "",
      "fullFile": "",
      "file": "",
      "beforeHooks": [],
      "afterHooks": [],
      "tests": [],
      "suites": [
        {
          "uuid": "664dc5cf-17aa-4818-9abe-1852b28d3202",
          "title": "測試add函數",
          "fullFile": "D:\\Work\\Mocha-Jest\\Mocha\\test\\add.test.js",
          "file": "\\test\\add.test.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "測試5+5預期101",
              "fullTitle": "測試add函數 測試5+5預期101",
              "timedOut": false,
              "duration": 1,
              "state": "failed",
              "speed": null,
              "pass": false,
              "fail": true,
              "pending": false,
              "context": null,
              "code": "expect(add(5,5)).to.be.equal(10);",
              "err": {
                "message": "TypeError: add is not a function",
                "estack": "TypeError: add is not a function\n    at Context.<anonymous> (test\\add.test.js:20:16)\n    at processImmediate (internal/timers.js:439:21)",
                "diff": null
              },
              "uuid": "d617b33c-9aa6-4ace-b5eb-7f675462e6ee",
              "parentUUID": "664dc5cf-17aa-4818-9abe-1852b28d3202",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [],
          "failures": [
            "d617b33c-9aa6-4ace-b5eb-7f675462e6ee"
          ],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        },
        {
          "uuid": "6ca81d11-c229-4e70-8ee1-67b6f021f943",
          "title": "Animals",
          "fullFile": "D:\\Work\\Mocha-Jest\\Mocha\\test\\test.index.js",
          "file": "\\test\\test.index.js",
          "beforeHooks": [],
          "afterHooks": [],
          "tests": [
            {
              "title": "Objects should not be an created using classical inheritance",
              "fullTitle": "Animals Objects should not be an created using classical inheritance",
              "timedOut": false,
              "duration": 1,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "spot.constructor.toString().substring(0,5).should.not.equal('class')",
              "err": {},
              "uuid": "3aaab550-5250-4ae4-91dd-bebcbf1faa30",
              "parentUUID": "6ca81d11-c229-4e70-8ee1-67b6f021f943",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "Objects should not be created using prototypal inheritance",
              "fullTitle": "Animals Objects should not be created using prototypal inheritance",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "let construct = spot.constructor.toString()\nlet containsThisKeyword = /this/g.test(construct)\nexpect(containsThisKeyword).to.equal(false)",
              "err": {},
              "uuid": "a5f7b356-fc53-4a4e-91ee-5437a95201f2",
              "parentUUID": "6ca81d11-c229-4e70-8ee1-67b6f021f943",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "all animals should bite",
              "fullTitle": "Animals all animals should bite",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "[spot, sassy, hiss].forEach(animal => {\n  animal.bite().should.equal(animal.name() + ' bit you!')\n})",
              "err": {},
              "uuid": "36ccce19-85f3-420f-84be-0893ca069126",
              "parentUUID": "6ca81d11-c229-4e70-8ee1-67b6f021f943",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cats should meow",
              "fullTitle": "Animals cats should meow",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "sassy.meow().should.equal('Meow, I\\'m a cat!')",
              "err": {},
              "uuid": "8880173f-463a-485d-8957-ccf13b0842a5",
              "parentUUID": "6ca81d11-c229-4e70-8ee1-67b6f021f943",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to say it's bio",
              "fullTitle": "Animals should be able to say it's bio",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(sassy.bio(), 'Sassy the cat is 5 years old.')",
              "err": {},
              "uuid": "8d238dff-04d2-47c4-94e0-b154cf111c70",
              "parentUUID": "6ca81d11-c229-4e70-8ee1-67b6f021f943",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "should be able to eat",
              "fullTitle": "Animals should be able to eat",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(spot.eat(), 'Spot ate some dog food!')",
              "err": {},
              "uuid": "5eac437c-8708-4833-bf69-810093ee87bc",
              "parentUUID": "6ca81d11-c229-4e70-8ee1-67b6f021f943",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "dogs should bark",
              "fullTitle": "Animals dogs should bark",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(spot.bark(), 'Bark, I\\'m a dog!')",
              "err": {},
              "uuid": "a19c9389-3c67-4933-8dde-a44c2792a3ed",
              "parentUUID": "6ca81d11-c229-4e70-8ee1-67b6f021f943",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "cats and dogs want to cuddle",
              "fullTitle": "Animals cats and dogs want to cuddle",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(sassy.cuddle(), 'Sassy wants to cuddle!')\nassert.equal(spot.cuddle(), 'Spot wants to cuddle!')",
              "err": {},
              "uuid": "ae10adab-27ef-4412-a483-eb2e6bc41498",
              "parentUUID": "6ca81d11-c229-4e70-8ee1-67b6f021f943",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "snakes should hiss",
              "fullTitle": "Animals snakes should hiss",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "assert.equal(hiss.hiss(), 'Hiss, I\\'m a snake!')",
              "err": {},
              "uuid": "93ae424d-984b-49a5-8abb-5c2888fbc09a",
              "parentUUID": "6ca81d11-c229-4e70-8ee1-67b6f021f943",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "snakes do not cuddle",
              "fullTitle": "Animals snakes do not cuddle",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "try{\n  hiss.cuddle()\n} catch(err) {\n  should.exist(err)\n}",
              "err": {},
              "uuid": "a824d972-f934-42ff-b573-e93a4954bb38",
              "parentUUID": "6ca81d11-c229-4e70-8ee1-67b6f021f943",
              "isHook": false,
              "skipped": false
            },
            {
              "title": "snakes slither",
              "fullTitle": "Animals snakes slither",
              "timedOut": false,
              "duration": 0,
              "state": "passed",
              "speed": "fast",
              "pass": true,
              "fail": false,
              "pending": false,
              "context": null,
              "code": "hiss.slither().should.equal('~~~~~')",
              "err": {},
              "uuid": "ffaebcfd-148f-469a-8551-7967e8912ba8",
              "parentUUID": "6ca81d11-c229-4e70-8ee1-67b6f021f943",
              "isHook": false,
              "skipped": false
            }
          ],
          "suites": [],
          "passes": [
            "3aaab550-5250-4ae4-91dd-bebcbf1faa30",
            "a5f7b356-fc53-4a4e-91ee-5437a95201f2",
            "36ccce19-85f3-420f-84be-0893ca069126",
            "8880173f-463a-485d-8957-ccf13b0842a5",
            "8d238dff-04d2-47c4-94e0-b154cf111c70",
            "5eac437c-8708-4833-bf69-810093ee87bc",
            "a19c9389-3c67-4933-8dde-a44c2792a3ed",
            "ae10adab-27ef-4412-a483-eb2e6bc41498",
            "93ae424d-984b-49a5-8abb-5c2888fbc09a",
            "a824d972-f934-42ff-b573-e93a4954bb38",
            "ffaebcfd-148f-469a-8551-7967e8912ba8"
          ],
          "failures": [],
          "pending": [],
          "skipped": [],
          "duration": 1,
          "root": false,
          "rootEmpty": false,
          "_timeout": 2000
        }
      ],
      "passes": [],
      "failures": [],
      "pending": [],
      "skipped": [],
      "duration": 0,
      "root": true,
      "rootEmpty": true,
      "_timeout": 2000
    }
  ],
  "meta": {
    "mocha": {
      "version": "7.1.1"
    },
    "mochawesome": {
      "options": {
        "quiet": false,
        "reportFilename": "mochawesome",
        "saveHtml": true,
        "saveJson": true,
        "consoleReporter": "spec",
        "useInlineDiffs": false,
        "code": true
      },
      "version": "5.0.0"
    },
    "marge": {
      "options": null,
      "version": "4.1.0"
    }
  }
}